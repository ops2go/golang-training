{
	// Place your snippets for go here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"package main and main function": {
		"prefix": "pkg",
		"body": "package main\n\n",
		"description": "Snippet for main package & function"
	},
	"print a line": {
		"prefix": "fpl",
		"body": "fmt.Println(${1:x})"
	},
	"string print": {
		"prefix": "fs",
		"body": "fmt.Sprint(${1:x})"
	},
	"variadic function": {
		"prefix": "variadic",
		"body": "func $1 ($2 ...$0) "
	},
	"beggining of glob template file": {
		"prefix": "tempglob",
		"body": "package main\n\nimport (\n\t\"os\"\n\t\"log\"\n\t\"text/template\"\n)\n\nvar tpl *template.Template\n\nfunc init() {\n\ttpl = template.Must(template.ParseGlob(\"templates/*\"))\n}\n\nfunc main() {\n\terr := tpl.ExecuteTemplate(os.Stdout, \"tpl.gohtml\", x)\n\tif err != nil {\n\tlog.Fatalln(err)\n}\n}"
	}
}